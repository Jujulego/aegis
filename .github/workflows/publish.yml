name: 'Publish'

on:
  push:
    branches:
      - main
    paths-ignore:
      - 'docs/**'

jobs:
  setup:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3.0.2

      - name: Use Node.js 16.x
        uses: actions/setup-node@v3.4.1
        with:
          node-version: 16
          cache: yarn

      - name: Install
        run: yarn install --immutable

      - name: List workspaces to lint
        id: lint
        run: echo "::set-output name=matrix::$(yarn jill list --with-script lint --json)"

      - name: List workspaces to test
        id: test
        run: echo "::set-output name=matrix::$(yarn jill list --with-script test --json)"

    outputs:
      matrix-lint: ${{ steps.lint.outputs.matrix }}
      matrix-test: ${{ steps.test.outputs.matrix }}

  lint:
    runs-on: ubuntu-latest
    needs: [setup]
    if: ${{ fromJson(needs.setup.outputs.matrix-lint)[0] }}

    strategy:
      matrix:
        include: ${{ fromJson(needs.setup.outputs.matrix-lint) }}

    steps:
      - uses: actions/checkout@v3.0.2

      - name: Use Node.js 16.x
        uses: actions/setup-node@v3.4.1
        with:
          node-version: 16
          cache: yarn

      - name: Install
        run: yarn install --immutable

      - name: Lint
        run: yarn workspace ${{ matrix.name }} lint

  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3.0.2

      - name: Use Node.js 16.x
        uses: actions/setup-node@v3.4.1
        with:
          node-version: 16
          cache: yarn

      - name: Install
        run: yarn install --immutable

      - name: Build
        run: yarn jill each build

      - uses: actions/upload-artifact@v3
        with:
          name: build-artifacts
          path: packages/*/dist/*

  test:
    runs-on: ubuntu-latest
    needs: [setup, build]
    if: ${{ fromJson(needs.setup.outputs.matrix-lint)[0] }}

    strategy:
      matrix:
        include: ${{ fromJson(needs.setup.outputs.matrix-test) }}

    steps:
      - uses: actions/checkout@v3.0.2

      - name: Use Node.js 16.x
        uses: actions/setup-node@v3.4.1
        with:
          node-version: 16
          cache: yarn

      - name: Install
        run: yarn install --immutable

      - uses: actions/download-artifact@v3
        with:
          name: build-artifacts
          path: packages

      - name: Test
        run: yarn workspace ${{ matrix.name }} test

      - name: Upload test coverage
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.slug }}-coverage
          path: ${{ matrix.root }}/coverage

  publish:
    runs-on: ubuntu-latest
    environment: npm
    needs: [lint, test]

    permissions:
      contents: write

    steps:
      - uses: actions/checkout@v3.0.2

      - name: Use Node.js 16.x
        uses: actions/setup-node@v3.4.1
        with:
          node-version: 16
          cache: yarn

      - name: Install
        run: yarn install --immutable

      - uses: actions/download-artifact@v3
        with:
          name: build-artifacts
          path: packages

      - name: Publish
        run: yarn workspaces foreach --no-private npm publish --access public --tolerate-republish
        env:
          YARN_NPM_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

  sonarcloud:
    runs-on: ubuntu-latest
    needs: [setup, test]
    if: ${{ fromJson(needs.setup.outputs.matrix-lint)[0] }}

    strategy:
      matrix:
        include: ${{ fromJson(needs.setup.outputs.matrix-test) }}

    steps:
      - uses: actions/checkout@v3.0.2
        with:
          fetch-depth: 0

      - name: Download test coverage
        uses: actions/download-artifact@v3
        continue-on-error: true
        with:
          name: ${{ matrix.slug }}-coverage
          path: ${{ matrix.root }}/coverage

      - name: Load package.json
        id: info
        run: echo ::set-output name=package::`cat ${{ matrix.root }}/package.json`

      - name: Sonarcloud
        uses: sonarsource/sonarcloud-github-action@v1.6
        with:
          projectBaseDir: ${{ matrix.root }}
          args: >
            -Dsonar.projectVersion=${{ fromJSON(steps.info.outputs.package).version }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
